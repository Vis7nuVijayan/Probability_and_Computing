import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.HashSet;
import java.util.Scanner;

public class Solution
{
	public static final int INPUT = 10;
	public static final int NO_OF_ROUNDS = 100;
	
	static double[] getRandomRating(int n)
	{
		double temp[] = new double[n];
		for(int i=0; i<n; ++i)
			temp[i] = Math.random();
		return temp;
	}
	
	static double getMedian(double[] numbers)
	{
		Arrays.sort(numbers);
		int arrayLength = numbers.length;
		return numbers[arrayLength/2];
	}
	
	static double[] getMembersOfSetR(double[] numbers)
	{
		int sqrtN = (int)Math.sqrt(INPUT);
		int usedN = (int)Math.sqrt(sqrtN);
		int[] selectedIndex = new int[usedN];
		double[] selectedNumbers = new double[usedN];
		while(usedN > 0)
		{
			--usedN;
			int temp = (int)(Math.random()*1000);
			selectedIndex[usedN] = temp;;
		}
		for(int i=0;i<usedN; ++i)
			selectedNumbers[i] = numbers[selectedIndex[i]];
		return selectedNumbers;
	}
	
	static double randomizedAlgorithm(double[] numbers)
	{
		double[] setR = getMembersOfSetR(numbers);
		int lengthR = setR.length;
		Arrays.sort(setR);
		int sqrtN = (int)Math.sqrt(INPUT);
		double d = setR[lengthR/2];
	}
	
	public static void main(String args[])
	{
		int i = 0;
		while(i < 1)
		{
			double[] numbers = getRandomRating(INPUT);
			for(int j =0; j<INPUT; ++j)
				System.out.print(numbers[j]+" ");
			System.out.println();
			//double median = randomizedAlgorithm(numbers);
			double originalMedian = getMedian(numbers);
			for(int j =0; j<INPUT; ++j)
				System.out.print(numbers[j]+" ");
			System.out.println();
			++i;
			System.out.println(originalMedian);
		}
	}
}